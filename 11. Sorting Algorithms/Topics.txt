- Sorting is the process of re-arranging the items in a collection e.g. array, so that the items are in some kind of order. 
  - Ascending magnitude
  - Descending magnitude
  - Alphabetical
  - Chronological ...
  
Why learn sorting
1. Sorting is an incredibly common task; good to know how it works. 
2. There are many different ways to sort things, each with their advantages and disadvantages. 
3. Technical interviews.

Objectives:
- Implement bubble sort. 
- Implement selection sort
- Implement insertion sort.
- Compare above sorting algorithms.

Built-in Javascript Sorting
- JS default `Array.sort()` method sorts according to each element's Unicode code-point value, according to the string equivalent of each element.
  - Converts each array element to a string. 
  - Converts each string character to its Unicode. 
  - Sort by Unicode.
  - Return sorted array.

- You can customize how it works by providing an additional (optional) comparator function as an argument to the sort() method. 
- The comparator looks at pairs of eleents (a, b) and determines their sort order based on the return value. 
  - If it returns a -ve number, a should come before b.
  - If it returns a +ve number, a should come after b. 
  - If it returns 0, a and b are the same as far as the sort is concerned.
  

Comparison-based Sorting Algorithms

1. Bubble Sort
- A sorting algorithm where the largest values bubble up to the top by swapping position, one at a time for each pass.
- Involves a nested loop (pass) in an outer loop, bounded by the size of the input array.

- Can be optimized for nearly sorted arrays by keeping a record of whether values were swapped in the previous pass.

Bubble Sort Time complexity:
- Unoptimized: O(n^2)
- Optimized for nearly sorted arrays: O(n)


2. Selection Sort
- Similar to bubble sort, but it finds the smallest (minimum) value and places it into sorted position, at the end of each pass.
- Involves finding the index of the minimum value during each pass (inner loop). 
- If the index of the "new" minimum value in a pass is not equal to the index of the initial minimum value at the start of the pass, swap! 

Selection Sort Time Complexity:
- O(n^2)

- Can't be optimized for nearly-sorted arrays like Bubble sort. 
- Only better than Bubble sort when minimizing the number of swap operations, for memory purpose.
  
  
